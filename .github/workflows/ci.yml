name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PYTHONUTF8: "1"
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      ENVIRONMENT: "ci"
      LOG_LEVEL: "INFO"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: "pip"
        cache-dependency-path: |
          requirements.lock.txt
          requirements.txt
    
    - name: Create .env from secrets
      shell: bash
      run: |
        cat > .env <<'EOF'
        DISCORD_BOT_TOKEN=${{ secrets.DISCORD_BOT_TOKEN }}
        DISCORD_GUILD_ID=${{ secrets.DISCORD_GUILD_ID }}
        DISCORD_REPORTS_CHANNEL_ID=${{ secrets.DISCORD_REPORTS_CHANNEL_ID }}
        DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}
        DISCORD_APP_ID=${{ secrets.DISCORD_APP_ID }}
        ALPACA_API_KEY_ID=${{ secrets.ALPACA_API_KEY_ID }}
        ALPACA_API_SECRET_KEY=${{ secrets.ALPACA_API_SECRET_KEY }}
        ALPACA_PAPER_BASE_URL=https://paper-api.alpaca.markets
        POLYGON_API_KEY=${{ secrets.POLYGON_API_KEY }}
        ALPHAVANTAGE_API_KEY=${{ secrets.ALPHAVANTAGE_API_KEY }}
        FRED_API_KEY=${{ secrets.FRED_API_KEY }}
        COINGECKO_API_KEY=${{ secrets.COINGECKO_API_KEY }}
        TIINGO_API_KEY=${{ secrets.TIINGO_API_KEY }}
        OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
        WANDB_API_KEY=${{ secrets.WANDB_API_KEY }}
        DATABASE_URL=${{ secrets.DATABASE_URL }}
        ENVIRONMENT=ci
        LOG_LEVEL=INFO
        EOF
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        if [ -f requirements.lock.txt ]; then pip install -r requirements.lock.txt; elif [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install "pytest>=7" pytest-cov "ruff>=0.5" "mypy>=1.8" pip-audit python-dotenv
        
    - name: Lint (ruff)
      run: ruff check .
      
    - name: Type check (mypy)
      run: mypy .
      
    - name: Security audit (pip-audit)
      run: pip-audit -r requirements.txt || true
      
    - name: Tests
      run: pytest -q --disable-warnings --maxfail=1 --cov=. --cov-report=term-missing
      
    - name: Upload coverage (artifact)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: ./.coverage*